@model ITAMapp.ViewModels.AddAssetViewModel
<link rel="stylesheet" type="text/css" href="~/css/add_style.css"/>
<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.11.3.min.js"></script>
<script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.14.0/jquery.validate.min.js"></script>
<script src="https://ajax.aspnetcdn.com/ajax/jquery.validation.unobtrusive/3.2.6/jquery.validate.unobtrusive.min.js"></script>
<span class="AddLabel">Add New @Model.urlCategory</span>

<br><br>


<div class="Entry">
    <form method="post" action="/@Model.urlCategory/insert" onsubmit="return checkboxCheck()" >
        @{string identifierLabelId; }
        @foreach (var field in Model.fields)
        {
            if (field.CollapsedBy == 0)
            {


                //If this field is the identifier field, sets this field as the unique identification in the database
                if (field.IsIdentifier == true)
                {
                    identifierLabelId = field.FieldId.ToString();
                    <input type=hidden name=identityLabelId value=@identifierLabelId />

                }

                int fieldId = field.FieldId;
                @switch (@field.FieldType)
                {
                    case 1:
                        //Dropdown Field
                        <p>
                            <label for="@field.FieldLabel">@field.FieldLabel: </label><select name="@field.FieldId" id="@field.FieldLabel" required>
                            <option></option>
                                @foreach (var listValue in Model.dropdownFields)
                                {
                                    @if (listValue.FieldId == fieldId)
                                    {
                                        <option>@listValue.ListDescription</option>

                                    }

                                }
                            </select>
                        </p>
                        break;

                    case 2:
                        //Checkbox
                        <p>
                            <label for="@field.FieldLabel">@field.FieldLabel:</label>
                            <input id="@field.FieldId.ToString()"
                                   name="@field.FieldId.ToString()"
                                   onchange="checkboxRequired(@field.FieldId.ToString())"
                                   type="checkbox"/>
                            
                           
                            <fieldset id="set_@field.FieldId.ToString()">
                                <legend>If yes...</legend>
                                <hr />
                                @foreach (var subField in Model.fields)
                                {
                                    if (subField.CollapsedBy == fieldId)
                                    {

                                        int subfieldId = field.FieldId;
                                        @switch (subField.FieldType)
                                        {
                                            case 1:
                                                //Dropdown Field
                                        <span>
                                            <label for="@subField.FieldLabel">@subField.FieldLabel: </label><select name="@subField.FieldId.ToString()" id="@subField.FieldLabel">
                                            <option disabled selected></option>
                                                @foreach (var listValue in Model.dropdownFields)
                                                {
                                                    @if (listValue.FieldId == subfieldId)
                                                    {
                                                        <option>@listValue.ListDescription</option>

                                                    }

                                                }
                                            </select>
                                        </span>
                                                break;

                                            case 3:
                                                //Date
                                                <span>
                                                    <label for="@subField.FieldLabel">@subField.FieldLabel:</label><input type="date" name="@subField.FieldId.ToString()" id="@subField.FieldLabel" />
                                                </span>
                                                break;

                                            case 4:
                                                //Long text input
                                                <span>
                                                    <label for="@subField.FieldLabel">@subField.FieldLabel:</label><textarea name="@subField.FieldId.ToString()" id="@subField.FieldLabel"></textarea>
                                                </span>
                                                break;

                                            default:
                                                <span>
                                                    <label for="@subField.FieldLabel">@subField.FieldLabel:</label><input name="@subField.FieldId.ToString()" id="@subField.FieldLabel" />
                                                </span>
                                                break;
                                        }



                                    }

                                }


                                </fieldset>


                                </p>
                        break;

                    case 3:
                        //Date
                        <p>
                            <label for="@field.FieldLabel">@field.FieldLabel:</label><input type="date" name="@field.FieldId.ToString()" id="@field.FieldLabel" required/>
                        </p>
                        break;

                    case 4:
                        //Long text input
                        <p>
                            <label for="@field.FieldLabel">@field.FieldLabel:</label><textarea name="@field.FieldId.ToString()" id="@field.FieldLabel"  class="form-control" required></textarea>
                        </p>
                        break;

                    case 5:
                        //Multiselect Field
                        <p>
                            <label for="@field.FieldLabel">@field.FieldLabel: </label><select multiple name="@field.FieldId" id="@field.FieldLabel" required>
                                @foreach (var listValue in Model.dropdownFields)
                                {
                                    @if (listValue.FieldId == fieldId)
                                    {
                                        <option>@listValue.ListDescription</option>

                                    }

                                }
                            </select>
                        </p>
                        break;

                    default:
                        <p>
                            <label for="@field.FieldLabel">@field.FieldLabel:</label><input name="@field.FieldId.ToString()" id="@field.FieldLabel" class="form-control" required/>
                        </p>
                        break;
                }

            }



        }
        
        <input type="submit" />
        <input type="reset" value="Clear" onclick="return confirm('Are you sure you want to clear?')"/>

    </form>



</div>

<script>

    function checkboxRequired(fieldId) {
        
        var check = document.getElementById(fieldId);
        var fieldset = document.getElementById("set_" + fieldId);

        var inputsList = fieldset.getElementsByTagName("input");
        var textareasList = fieldset.getElementsByTagName("textarea");
        var selectsList = fieldset.getElementsByTagName("select");
        for (var j = 0; j < inputsList.length; j++) {
            var input = document.getElementById(inputsList[j].id);
            if (check.checked == true) {
                input.setAttribute("required","");
            }
            else {
                input.removeAttribute("required");

            }

        }

        for (var j = 0; j < textareasList.length; j++) {
            var input = document.getElementById(textareasList[j].id);
            if (check.checked == true) {
                input.setAttribute("required", "");
            }
            else {
                input.removeAttribute("required");

            }

        }

        for (var j = 0; j < selectsList.length; j++) {
            var input = document.getElementById(selectsList[j].id);
            if (check.checked == true) {
                input.setAttribute("required", "");
            }
            else {
                input.removeAttribute("required");

            }
           
}

    }

    function checkboxCheck() {
        var submit = confirm("Are you sure you want to submit?");
        if (submit == true) {
            var fieldsets = document.getElementsByTagName("fieldset");
            for (var i = 0; i < fieldsets.length; i++) {
            if (document.getElementById(fieldsets[i].id.substring(4)).checked == false) {
                var inputsList = fieldsets[i].getElementsByTagName("input");
                var textareasList = fieldsets[i].getElementsByTagName("textarea");
                var selectsList = fieldsets[i].getElementsByTagName("select");
                for (var j = 0; j < inputsList.length; j++) {
                    var input = document.getElementById(inputsList[j].id);
                    input.value = '';

                }

                for (var j = 0; j < textareasList.length; j++) {
                    var input = document.getElementById(textareasList[j].id);
                    input.value = '';

                }

                for (var j = 0; j < selectsList.length; j++) {
                    var input = document.getElementById(selectsList[j].id);
                    input.value = '';

                }

            }

            return true
        }


    }
        else {
            return false;

        }

        

    }

</script>