@model ITAMapp.ViewModels.CategoryViewModel
<link rel="stylesheet" type="text/css" href="~/css/table.css">
@*<script type="text/javascript" src="~/Scripts/TableSort.js"></script>*@

<p id="label">@Model.title</p>

<div id="SearchButtons">
    @{ int n = 0;}
    <select class="styled" id="filterByColumn">
        @foreach (var label in Model.labels)
        {
            <option value=@n  >@label</option>
            n += 1;

        }
        

    </select>
    <input id="Search" placeholder="Search..."/>
    <button onclick="filter()">Apply</button>
    @*<input type="Button" value="Apply" class="button" id="apply" onclick="filter"/>*@
    <a href="/@Model.urlCategory/Add" id="new"><button>Add New Item</button></a>


</div>

<table id="AssetTable">
    
    <tr class="heading">
        @{int index = 0; }
        @foreach (var label in Model.labels)
        {
            <th onclick="sortTable(@index)">@label</th>
            index += 1;
        }
    </tr>
    @{var rowNum = 0; }
    @foreach (var asset in Model.assets)
    {
        @if (rowNum == 0)
        {
            <tr>
                @foreach (var property in asset.fields)
                {
                    <td>@property.FieldProperty</td>
                }
                <td><a href="/@Model.urlCategory/Edit/@asset.identification" ><img src="https://png.icons8.com/edit/p1em/16" title="Edit" width="16" height="16"></a></td>
                <td><a href="/@Model.urlCategory/delete/@asset.identification" onclick="return confirm('Are you sure you want to delete?')"><img src="https://png.icons8.com/trash/win10/16" title="Trash" width="16" height="16"></a></td>
            </tr>
            rowNum += 1;
        }
        else
        {
            <tr class="alternate">
                @foreach (var property in asset.fields)
                {
                    <td>@property.FieldProperty</td>
                }
                <td><a href="/@Model.urlCategory/Edit/@asset.identification"><img src="https://png.icons8.com/edit/p1em/16" title="Edit" width="16" height="16"></a></td>
                <td><a href="/@Model.urlCategory/delete/@asset.identification" onclick="return confirm('Are you sure you want to delete?')"><img src="https://png.icons8.com/trash/win10/16" title="Trash" width="16" height="16"></a></td>
            </tr>
            rowNum -= 1;
        }



    }

</table>

<script>
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("AssetTable");
        switching = true;
        //Set the sorting direction to ascending:
        dir = "asc";
        /*Make a loop that will continue until
        no switching has been done:*/
        while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.getElementsByTagName("TR");
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < (rows.length - 1); i++) {
                //start by saying there should be no switching:
                shouldSwitch = false;
                /*Get the two elements you want to compare,
                one from current row and one from the next:*/
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                /*check if the two rows should switch place,
                based on the direction, asc or desc:*/
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                /*If a switch has been marked, make the switch
                and mark that a switch has been done:*/
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                //Each time a switch is done, increase this count by 1:
                switchcount++;
            } else {
                /*If no switching has been done AND the direction is "asc",
                set the direction to "desc" and run the while loop again.*/
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }

    function filter() {
        // Declare variables 
        var input, filter, table, tr, td, i, column;
        input = document.getElementById("Search");
        filter = input.value.toUpperCase();
        table = document.getElementById("AssetTable");
        tr = table.getElementsByTagName("tr");
        column = document.getElementById("filterByColumn").value;

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[column];
            if (td) {
                if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>